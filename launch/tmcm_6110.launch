<!--
Copyright (c) 2023 Analog Devices, Inc. All Rights Reserved.
This software is proprietary to Analog Devices, Inc. and its licensors.
-->
 
<!-- -*- mode: XML -*- -->
<launch>
 
  <!-- Arguments on name space and sensor name in gazebo -->
  <arg name="ns_prefix" default="tmcm1" />
 
  <!-- All arguments below belongs to tf frame -->
  <arg name="tmcl_base_name" default="tmcm6110" />
 
  <!-- "period" specifies how often to send a transform-->
  <arg name="period" default="100"/>
 
  <!-- TMCL Board frame
    change values of:
    * "board_parent_frame" to specify parent frame of tmcl board (setting to "map" as default)
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "board_parent_frame" value = "map" />
  <arg name = "board_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_base_link')" />
  <arg name = "board_pos_x" value = "0" />
  <arg name = "board_pos_y" value = "0" />
  <arg name = "board_pos_z" value = "0" />
  <arg name = "board_pos_qx" value = "0" />
  <arg name = "board_pos_qy" value = "0" />
  <arg name = "board_pos_qz" value = "0" />
  <arg name = "board_pos_qw" value = "1" />
 
  <!-- Motor 0 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr0_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr0_frame')" />
  <arg name = "mtr0_pos_x" value = "2" />
  <arg name = "mtr0_pos_y" value = "0" />
  <arg name = "mtr0_pos_z" value = "0" />
  <arg name = "mtr0_pos_qx" value = "0" />
  <arg name = "mtr0_pos_qy" value = "0" />
  <arg name = "mtr0_pos_qz" value = "0" />
  <arg name = "mtr0_pos_qw" value = "1" />
 
  <!-- Motor 1 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr1_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr1_frame')" />
  <arg name = "mtr1_pos_x" value = "2" />
  <arg name = "mtr1_pos_y" value = "1" />
  <arg name = "mtr1_pos_z" value = "0" />
  <arg name = "mtr1_pos_qx" value = "0" />
  <arg name = "mtr1_pos_qy" value = "0" />
  <arg name = "mtr1_pos_qz" value = "0" />
  <arg name = "mtr1_pos_qw" value = "1" />
 
  <!-- Motor 2 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr2_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr2_frame')" />
  <arg name = "mtr2_pos_x" value = "1" />
  <arg name = "mtr2_pos_y" value = "1" />
  <arg name = "mtr2_pos_z" value = "0" />
  <arg name = "mtr2_pos_qx" value = "0" />
  <arg name = "mtr2_pos_qy" value = "0" />
  <arg name = "mtr2_pos_qz" value = "0" />
  <arg name = "mtr2_pos_qw" value = "1" />
 
  <!-- Motor 3 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr3_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr3_frame')" />
  <arg name = "mtr3_pos_x" value = "-1" />
  <arg name = "mtr3_pos_y" value = "1" />
  <arg name = "mtr3_pos_z" value = "0" />
  <arg name = "mtr3_pos_qx" value = "0" />
  <arg name = "mtr3_pos_qy" value = "0" />
  <arg name = "mtr3_pos_qz" value = "180" />          <!--rotate motor to 180 degrees-->
  <arg name = "mtr3_pos_qw" value = "1" />
 
  <!-- Motor 4 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr4_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr4_frame')" />
  <arg name = "mtr4_pos_x" value = "-2" />
  <arg name = "mtr4_pos_y" value = "1" />
  <arg name = "mtr4_pos_z" value = "0" />
  <arg name = "mtr4_pos_qx" value = "0" />
  <arg name = "mtr4_pos_qy" value = "0" />
  <arg name = "mtr4_pos_qz" value = "180" />          <!--rotate motor to 180 degrees-->
  <arg name = "mtr4_pos_qw" value = "1" />
 
  <!-- Motor 5 frame
    change values of:
    * "pos_x,y,z" for translation
    * "pos_qx,qy,qz,qw" for rotation[Quaternion] -->
  <arg name = "mtr5_base_name" value = "$(eval arg('ns_prefix') + '/' + arg('tmcl_base_name') + '_mtr5_frame')" />
  <arg name = "mtr5_pos_x" value = "-2" />
  <arg name = "mtr5_pos_y" value = "0" />
  <arg name = "mtr5_pos_z" value = "0" />
  <arg name = "mtr5_pos_qx" value = "0" />
  <arg name = "mtr5_pos_qy" value = "0" />
  <arg name = "mtr5_pos_qz" value = "180" />          <!--rotate motor to 180 degrees-->
  <arg name = "mtr5_pos_qw" value = "1" />
 
  <group ns="$(arg ns_prefix)">
    <!--Launches node-->
    <node name="tmcl_ros_node" pkg="tmcl_ros" type="tmcl_ros_node" output="screen" required="true">
      <!-- Autogenerated YAML file containing TMCM-6110 configurations -->
      <rosparam command="load" file="$(find tmcl_ros)/config/autogenerated/TMCM-6110.yaml" />
      <!-- User-generated YAML file containing ROS-specific parameters as well as user-set values for TMCM-6110 configurations -->
      <rosparam command="load" file="$(find tmcl_ros)/config/TMCM-6110_Ext.yaml" />
    </node>
 
    <!--Launches tf frames-->
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_link')" 
      args="$(arg board_pos_x) $(arg board_pos_y) $(arg board_pos_z) $(arg board_pos_qx) $(arg board_pos_qy) $(arg board_pos_qz) $(arg board_pos_qw) $(arg board_parent_frame) $(arg board_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr0_link')" 
      args="$(arg mtr0_pos_x) $(arg mtr0_pos_y) $(arg mtr0_pos_z) $(arg mtr0_pos_qx) $(arg mtr0_pos_qy) $(arg mtr0_pos_qz) $(arg mtr0_pos_qw) $(arg board_base_name) $(arg mtr0_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr1_link')" 
      args="$(arg mtr1_pos_x) $(arg mtr1_pos_y) $(arg mtr1_pos_z) $(arg mtr1_pos_qx) $(arg mtr1_pos_qy) $(arg mtr1_pos_qz) $(arg mtr1_pos_qw) $(arg board_base_name) $(arg mtr1_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr2_link')" 
      args="$(arg mtr2_pos_x) $(arg mtr2_pos_y) $(arg mtr2_pos_z) $(arg mtr2_pos_qx) $(arg mtr2_pos_qy) $(arg mtr2_pos_qz) $(arg mtr2_pos_qw) $(arg board_base_name) $(arg mtr2_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr3_link')" 
      args="$(arg mtr3_pos_x) $(arg mtr3_pos_y) $(arg mtr3_pos_z) $(arg mtr3_pos_qx) $(arg mtr3_pos_qy) $(arg mtr3_pos_qz) $(arg mtr3_pos_qw) $(arg board_base_name) $(arg mtr3_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr4_link')" 
      args="$(arg mtr4_pos_x) $(arg mtr4_pos_y) $(arg mtr4_pos_z) $(arg mtr4_pos_qx) $(arg mtr4_pos_qy) $(arg mtr4_pos_qz) $(arg mtr4_pos_qw) $(arg board_base_name) $(arg mtr4_base_name) $(arg period)" />
 
    <node pkg="tf" type="static_transform_publisher" name="$(eval arg('tmcl_base_name') + '_mtr5_link')" 
      args="$(arg mtr5_pos_x) $(arg mtr5_pos_y) $(arg mtr5_pos_z) $(arg mtr5_pos_qx) $(arg mtr5_pos_qy) $(arg mtr5_pos_qz) $(arg mtr5_pos_qw) $(arg board_base_name) $(arg mtr5_base_name) $(arg period)" />
  </group>
 
</launch>
